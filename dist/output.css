/*
! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-1\/2 {
  top: 50%;
}

.left-1\/2 {
  left: 50%;
}

.top-\[20px\] {
  top: 20px;
}

.top-\[50\%\] {
  top: 50%;
}

.z-10 {
  z-index: 10;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.ml-\[\] {
  margin-left: ;
}

.ml-\[-\] {
  margin-left: -;
}

.ml-\[-100px\] {
  margin-left: -100px;
}

.mt-auto {
  margin-top: auto;
}

.mt-\[\] {
  margin-top: ;
}

.mt-\[500px\] {
  margin-top: 500px;
}

.mt-\[200px\] {
  margin-top: 200px;
}

.mt-\[1500px\] {
  margin-top: 1500px;
}

.mt-\[150px\] {
  margin-top: 150px;
}

.mt-\[100px\] {
  margin-top: 100px;
}

.mt-\[80px\] {
  margin-top: 80px;
}

.mt-\[60px\] {
  margin-top: 60px;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-\[50px\] {
  margin-top: 50px;
}

.mt-\[90px\] {
  margin-top: 90px;
}

.mt-\[8px\] {
  margin-top: 8px;
}

.mt-\[78px\] {
  margin-top: 78px;
}

.mt-\[77px\] {
  margin-top: 77px;
}

.mt-\[70px\] {
  margin-top: 70px;
}

.mt-\[5px\] {
  margin-top: 5px;
}

.mt-\[20px\] {
  margin-top: 20px;
}

.mt-\[25px\] {
  margin-top: 25px;
}

.mt-\[85px\] {
  margin-top: 85px;
}

.mt-\[82px\] {
  margin-top: 82px;
}

.mt-\[83px\] {
  margin-top: 83px;
}

.mt-\[px\] {
  margin-top: px;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.h-fit {
  height: -moz-fit-content;
  height: fit-content;
}

.h-\[\] {
  height: ;
}

.h-\[30px\] {
  height: 30px;
}

.min-h-\[\] {
  min-height: ;
}

.min-h-\[200px\] {
  min-height: 200px;
}

.w-full {
  width: 100%;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.min-w-\[100px\] {
  min-width: 100px;
}

.min-w-\[300px\] {
  min-width: 300px;
}

.min-w-\[\] {
  min-width: ;
}

.min-w-\[50\%\] {
  min-width: 50%;
}

.min-w-\[5\%\] {
  min-width: 5%;
}

.min-w-\[40\%\] {
  min-width: 40%;
}

.min-w-\[45\%\] {
  min-width: 45%;
}

.min-w-\[\%\] {
  min-width: %;
}

.min-w-\[4\%\] {
  min-width: 4%;
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[\] {
  --tw-translate-x: ;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[50\] {
  --tw-translate-x: 50;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[50\%\] {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-\[50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-0 {
  --tw-translate-x: -0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-\[50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.resize-none {
  resize: none;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-\[100px\] {
  gap: 100px;
}

.gap-\[\] {
  gap: ;
}

.gap-\[200px\] {
  gap: 200px;
}

.gap-\[1000px\] {
  gap: 1000px;
}

.gap-\[800px\] {
  gap: 800px;
}

.gap-\[500px\] {
  gap: 500px;
}

.gap-\[400px\] {
  gap: 400px;
}

.gap-\[450px\] {
  gap: 450px;
}

.gap-\[210px\] {
  gap: 210px;
}

.gap-\[215px\] {
  gap: 215px;
}

.gap-\[px\] {
  gap: px;
}

.gap-\[45px\] {
  gap: 45px;
}

.gap-\[475px\] {
  gap: 475px;
}

.gap-\[4px\] {
  gap: 4px;
}

.gap-\[380px\] {
  gap: 380px;
}

.gap-\[20px\] {
  gap: 20px;
}

.gap-\[50px\] {
  gap: 50px;
}

.gap-\[55px\] {
  gap: 55px;
}

.gap-\[65px\] {
  gap: 65px;
}

.gap-\[20\%\] {
  gap: 20%;
}

.gap-\[5\%\] {
  gap: 5%;
}

.gap-\[80px\] {
  gap: 80px;
}

.gap-\[150px\] {
  gap: 150px;
}

.gap-\[120px\] {
  gap: 120px;
}

.gap-\[110px\] {
  gap: 110px;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-7 {
  gap: 1.75rem;
}

.rounded-\[10px\] {
  border-radius: 10px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-l {
  border-left-width: 1px;
}

.border-l-2 {
  border-left-width: 2px;
}

.border-r-2 {
  border-right-width: 2px;
}

.border-t-2 {
  border-top-width: 2px;
}

.border-\[\#24292F\] {
  --tw-border-opacity: 1;
  border-color: rgb(36 41 47 / var(--tw-border-opacity));
}

.border-\[\] {
  border-color: ;
}

.border-\[\#575757\] {
  --tw-border-opacity: 1;
  border-color: rgb(87 87 87 / var(--tw-border-opacity));
}

.border-\[\#\] {
  border-color: #;
}

.border-\[\#\#24292F\] {
  border-color: ##24292F;
}

.bg-contentColor {
  --tw-bg-opacity: 1;
  background-color: rgb(30 30 30 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-\[\#24292F\] {
  --tw-bg-opacity: 1;
  background-color: rgb(36 41 47 / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-\[\#7981E6\] {
  --tw-gradient-from: #7981E6;
  --tw-gradient-to: rgb(121 129 230 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-\[\#5194FF\] {
  --tw-gradient-to: #5194FF;
}

.p-2 {
  padding: 0.5rem;
}

.py-\[20px\] {
  padding-top: 20px;
  padding-bottom: 20px;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-\[15px\] {
  padding-top: 15px;
  padding-bottom: 15px;
}

.px-\[30px\] {
  padding-left: 30px;
  padding-right: 30px;
}

.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px;
}

.py-\[5px\] {
  padding-top: 5px;
  padding-bottom: 5px;
}

.py-px {
  padding-top: 1px;
  padding-bottom: 1px;
}

.py-\[px\] {
  padding-top: px;
  padding-bottom: px;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-\[2px\] {
  padding-top: 2px;
  padding-bottom: 2px;
}

.pl-4 {
  padding-left: 1rem;
}

.pt-\[10px\] {
  padding-top: 10px;
}

.pt-\[\] {
  padding-top: ;
}

.pt-\[5px\] {
  padding-top: 5px;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-6 {
  padding-top: 1.5rem;
}

.pt-8 {
  padding-top: 2rem;
}

.pt-7 {
  padding-top: 1.75rem;
}

.pt-\[26px\] {
  padding-top: 26px;
}

.pt-1 {
  padding-top: 0.25rem;
}

.text-center {
  text-align: center;
}

.text-start {
  text-align: start;
}

.font-\[\] {
  font-family: ;
}

.text-\[30px\] {
  font-size: 30px;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-\[20px\] {
  font-size: 20px;
}

.text-\[50px\] {
  font-size: 50px;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-\[40px\] {
  font-size: 40px;
}

.text-\[27px\] {
  font-size: 27px;
}

.text-\[28px\] {
  font-size: 28px;
}

.font-bold {
  font-weight: 700;
}

.font-\[500\] {
  font-weight: 500;
}

.text-mainColor {
  --tw-text-opacity: 1;
  color: rgb(121 129 230 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-\[18x\] {
  color: 18x;
}

.text-\[50x\] {
  color: 50x;
}

.text-\[px\] {
  color: px;
}

.text-\[\#888888\] {
  --tw-text-opacity: 1;
  color: rgb(136 136 136 / var(--tw-text-opacity));
}

.text-\[\] {
  color: ;
}

.shadow-box {
  --tw-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  --tw-shadow-colored: 0px 4px 4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

/* @layer components {
  .algo-active {
    @apply block text-[30px] py-2 px-3 rounded-[10px] cursor-pointer text-white bg-gradient-to-r from-[#7981E6] to-[#5194FF];
  }
  .algo {
    @apply block text-[30px] py-2 px-3 rounded-[10px] cursor-pointer text-mainColor bg-white;
  }
  .section {
    @apply ;
  }
  .text {
    @apply block text-[30px] text-mainColor pl-4;
  }
} */

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:left-0::before {
  content: var(--tw-content);
  left: 0px;
}

.before\:bottom-\[10px\]::before {
  content: var(--tw-content);
  bottom: 10px;
}

.before\:top-\[10px\]::before {
  content: var(--tw-content);
  top: 10px;
}

.before\:top-\[50px\]::before {
  content: var(--tw-content);
  top: 50px;
}

.before\:top-\[px\]::before {
  content: var(--tw-content);
  top: px;
}

.before\:top-\[60px\]::before {
  content: var(--tw-content);
  top: 60px;
}

.before\:top-\[70px\]::before {
  content: var(--tw-content);
  top: 70px;
}

.before\:top-\[75px\]::before {
  content: var(--tw-content);
  top: 75px;
}

.before\:left-1\/2::before {
  content: var(--tw-content);
  left: 50%;
}

.before\:top-\[80px\]::before {
  content: var(--tw-content);
  top: 80px;
}

.before\:top-\[87px\]::before {
  content: var(--tw-content);
  top: 87px;
}

.before\:top-\[0px\]::before {
  content: var(--tw-content);
  top: 0px;
}

.before\:h-\[2px\]::before {
  content: var(--tw-content);
  height: 2px;
}

.before\:h-full::before {
  content: var(--tw-content);
  height: 100%;
}

.before\:h-\[1px\]::before {
  content: var(--tw-content);
  height: 1px;
}

.before\:w-full::before {
  content: var(--tw-content);
  width: 100%;
}

.before\:w-2::before {
  content: var(--tw-content);
  width: 0.5rem;
}

.before\:w-1::before {
  content: var(--tw-content);
  width: 0.25rem;
}

.before\:w-\[2px\]::before {
  content: var(--tw-content);
  width: 2px;
}

.before\:bg-\[\#575757\]::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(87 87 87 / var(--tw-bg-opacity));
}

.before\:bg-\[\]::before {
  content: var(--tw-content);
  background-color: ;
}

.before\:bg-\[\#\]::before {
  content: var(--tw-content);
  background-color: #;
}

.before\:bg-\[\#5\]::before {
  content: var(--tw-content);
  background-color: #5;
}

.before\:content-\[\'\'\]::before {
  --tw-content: '';
  content: var(--tw-content);
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:bottom-0::after {
  content: var(--tw-content);
  bottom: 0px;
}

.after\:left-0::after {
  content: var(--tw-content);
  left: 0px;
}

.after\:bottom-\[-10xp\]::after {
  content: var(--tw-content);
  bottom: -10xp;
}

.after\:bottom-\[-10px\]::after {
  content: var(--tw-content);
  bottom: -10px;
}

.after\:bottom-\[10px\]::after {
  content: var(--tw-content);
  bottom: 10px;
}

.after\:left-1\/2::after {
  content: var(--tw-content);
  left: 50%;
}

.after\:bottom-\[\]::after {
  content: var(--tw-content);
  bottom: ;
}

.after\:bottom-\[12px\]::after {
  content: var(--tw-content);
  bottom: 12px;
}

.after\:bottom-\[13px\]::after {
  content: var(--tw-content);
  bottom: 13px;
}

.after\:bottom-\[1px\]::after {
  content: var(--tw-content);
  bottom: 1px;
}

.after\:bottom-\[9px\]::after {
  content: var(--tw-content);
  bottom: 9px;
}

.after\:bottom-\[px\]::after {
  content: var(--tw-content);
  bottom: px;
}

.after\:bottom-\[6px\]::after {
  content: var(--tw-content);
  bottom: 6px;
}

.after\:h-\[2px\]::after {
  content: var(--tw-content);
  height: 2px;
}

.after\:h-full::after {
  content: var(--tw-content);
  height: 100%;
}

.after\:h-\[\]::after {
  content: var(--tw-content);
  height: ;
}

.after\:h-\[80\]::after {
  content: var(--tw-content);
  height: 80;
}

.after\:h-\[80\%\]::after {
  content: var(--tw-content);
  height: 80%;
}

.after\:h-\[70\%\]::after {
  content: var(--tw-content);
  height: 70%;
}

.after\:h-\[74\%\]::after {
  content: var(--tw-content);
  height: 74%;
}

.after\:h-\[72\%\]::after {
  content: var(--tw-content);
  height: 72%;
}

.after\:w-full::after {
  content: var(--tw-content);
  width: 100%;
}

.after\:w-\[2px\]::after {
  content: var(--tw-content);
  width: 2px;
}

.after\:w-\[1px\]::after {
  content: var(--tw-content);
  width: 1px;
}

.after\:bg-\[\]::after {
  content: var(--tw-content);
  background-color: ;
}

.after\:bg-\[\#57575\]::after {
  content: var(--tw-content);
  background-color: #57575;
}

.after\:bg-\[\#575757\]::after {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(87 87 87 / var(--tw-bg-opacity));
}

.after\:content-\[\]::after {
  --tw-content: ;
  content: var(--tw-content);
}

.after\:content-\[\'\'\]::after {
  --tw-content: '';
  content: var(--tw-content);
}

.after\:content-\[\'hello\'\]::after {
  --tw-content: 'hello';
  content: var(--tw-content);
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (min-width: 1280px) {
  .xl\:max-w-\[1200px\] {
    max-width: 1200px;
  }
}
